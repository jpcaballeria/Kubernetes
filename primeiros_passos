------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Instalação Kind:

For AMD64 / x86_64
[ $(uname -m) = x86_64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.25.0/kind-linux-amd64
# For ARM64
[ $(uname -m) = aarch64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.25.0/kind-linux-arm64
chmod +x ./kind
mv ./kind /usr/local/bin/kind
kind -version
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Instalação Kubectl:

curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
chmod +x kubectl
mkdir -p ~/.local/bin
mv ./kubectl ~/.local/bin/kubectl
kubectl version --client
apt-get update
apt-get install -y apt-transport-https ca-certificates curl gnupg
url -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg # allow unprivileged APT programs to read this keyring
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
chmod 644 /etc/apt/sources.list.d/kubernetes.list
apt-get install -y kubectl
install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
get install bash-completion
apt-get install bash-completion
source /usr/share/bash-completion/bash_completion
echo 'source <(kubectl completion bash)' >>~/.bashrc
echo 'alias k=kubectl' >>~/.bashrc
echo 'complete -o default -F __start_kubectl k' >>~/.bashrc
source ~/.bashrc
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Criação do Cluster:

root@joaoferreira:~/Kind-Cluster# cat meu-primeiro-cluster.yaml
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
- role: worker
- role: worker
- role: worker
root@joaoferreira:~/Kind-Cluster#
root@joaoferreira:~/Kind-Cluster# kind create cluster --config meu-primeiro-cluster.yaml

root@joaoferreira:~/Kind-Cluster# kind get clusters
kind
root@joaoferreira:~/Kind-Cluster#

root@joaoferreira:~/Kind-Cluster# kubectl get nodes
NAME                 STATUS   ROLES           AGE   VERSION
kind-control-plane   Ready    control-plane   54m   v1.31.2
kind-worker          Ready    <none>          54m   v1.31.2
kind-worker2         Ready    <none>          54m   v1.31.2
kind-worker3         Ready    <none>          54m   v1.31.2
root@joaoferreira:~/Kind-Cluster#
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Criação do Pod e validação:

root@vps54480:~/Descomplicando_Kubernetes/day-1/kind# cat pod.yaml
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: joaoferreira-ngixn-2
  name: joaoferreira-ngixn-2
spec:
  containers:
  - image: nginx
    name: joaoferreira-ngixn-2
    ports:
    - containerPort: 80
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}
root@vps54480:~/Descomplicando_Kubernetes/day-1/kind#

root@vps54480:~/Descomplicando_Kubernetes/day-1/kind# kubectl apply -f pod.yaml
pod/joaoferreira-ngixn-2 created
root@vps54480:~/Descomplicando_Kubernetes/day-1/kind#

root@vps54480:~/Descomplicando_Kubernetes/day-1/kind# k get pods
NAME                   READY   STATUS    RESTARTS   AGE
giropops               1/1     Running   0          6d1h
joaoferreira-ngixn-2   1/1     Running   0          77s
root@vps54480:~/Descomplicando_Kubernetes/day-1/kind#

root@vps54480:~/Descomplicando_Kubernetes/day-1/kind# kubectl exec -ti joaoferreira-ngixn-2 -- nginx -v
nginx version: nginx/1.27.3
root@vps54480:~/Descomplicando_Kubernetes/day-1/kind#
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
